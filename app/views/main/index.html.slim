= render "modal_confirmation_list"
= render "modal_no_product"
= render "modal_loading"
= render "modal_validate_quantify"
.container-fluid.padding-side-zero.contentMain
  .row
    = render "slider_main"
  .row
    = render "shopping_list"

    .col-sm-offset-3.col-xs-12.col-sm-9
      h2.text-center Productos
      #box-productos.row.box-productos
        - @products.each do |p|
          .col-xs-12.col-sm-6.col-md-4.col-lg-3
            .box-producto.center-block
              .col-xs-12.fondoimgarticulo.vertical-align
                span.helper
                /= image_tag(p.first_image, {class: "img-responsive"})
                = image_tag("default.png", {class: "img-responsive lazy", 'data-original' => p.get_image_medium })
              .col-xs-12.padding-side-zero name="box-precio"
                .descPrecio
                  p.stock
                    | Disponible:
                    - if p.measuring_type == MeasuringType::UNIDAD
                      = " #{number_with_precision(p.max_sale, precision: 0)}"
                      |  Unid
                    - else
                      = " #{number_with_precision(p.max_sale, precision: 3, separator: ',', delimiter: '.')}"
                      |  Kg
                  h3.text-center
                    = p.description.capitalize
                .form_producto
                  p.precio-producto.text-center name="pmvp" value="#{p.price}" id="pmvp_#{p.id}"
                    = number_to_currency(p.price, unit: "", separator: ",", delimiter: ".")
                  .container-fluid
                    .row.banda
                      - if p.measuring_type == MeasuringType::UNIDAD
                        span.cant 
                          | Cant
                        input.peso type="number" name="cant" id="cant_#{p.id}" min="0" max="#{p.max_sale}"
                      - else
                        span
                          | BsF
                        input.precio type="tel" name="precio" id="precio_#{p.id}"
                        span
                          | Kg
                        input.peso type="tel" name="peso" id="peso_#{p.id}"
                    .container-fluid
                      .row
                        .col-md-12
                          a class="add-product" method="POST" onclick="addItem(#{@shopping_cart.id}, #{p.id}, #{(p.measuring_type == MeasuringType::UNIDAD) ? '"cant_"' : '"peso_"' }, #{p.price}, #{p.max_sale})"
                            button.btn-sm.btn-m.center-block
                              | Agregar

= javascript_include_tag '/js/precio-peso', 'data-turbolinks-track' => true
= javascript_include_tag '/js/lista-mandado', 'data-turbolinks-track' => true
= javascript_include_tag '//code.jquery.com/ui/1.11.4/jquery-ui.js', 'data-turbolinks-track' => true
= javascript_include_tag '/js/jquery.price_format.2.0.min', 'data-turbolinks-track' => true
= javascript_include_tag '/js/jquery.lazyload.min', 'data-turbolinks-track' => true


javascript:

  $(document).ready(function() {
    controlScroll();
    $('#observation').val(sessionStorage.getItem('observation'));
    if (sessionStorage["listActive"] == "true"){
      $('.toggles.togle').addClass('togleHover');
      $('#sidebar').css({left: 20});
    }
  });

  $("img.lazy").lazyload({
      effect : "fadeIn",
      container: $("#box-productos")
  });

  var getItemScrolltop = function(){
    sessionStorage["items_scrolltop"] = $("#tabla tbody").scrollTop();
  }
  var visible = function() {
    $(".contentMain").css({ "visibility": "visible"});
    $("#tabla tbody").css({ "visibility": "visible"});
  }
  var controlScroll = function(){
    if (sessionStorage.getItem('items_add') == "true" ) {
      sessionStorage["items_add"]=false;
      $("#tabla tbody").scrollTop($("#tabla tbody").prop('scrollHeight'));
      
      $('#tabla tbody tr:last').css({"background-color": "#fcebe5"});
      $('#tabla tbody tr:last').animate({backgroundColor: "#ffdacd"}, 800);
      $('#tabla tbody tr:last').animate({backgroundColor: "#f9f9f9"}, 800);
      $("#tabla tbody tr:last").delay(1600).queue(function(){
        $("#tabla tbody tr:last").removeAttr("style");
      });

      $('.toggles.togle i').css({"color": "#fff"});
      $('.toggles.togle').animate({backgroundColor: "#ff3400"}, 1800);
      $('.toggles.togle').animate({backgroundColor: "#f7f7f7"}, 1800);
      $(".toggles.togle").delay(0).queue(function(){
        $(".toggles.togle").removeAttr("style");
        $(".toggles.togle i").removeAttr("style");
      });
      visible();
    } else {
      if (sessionStorage.getItem('items_remove') == "true" ) {
        sessionStorage["items_remove"]=false;
        $("#tabla tbody").scrollTop(sessionStorage.getItem('items_scrolltop'));
        visible();
      }
      else{
        visible();
      }
    }
  }

  var removeItem = function(id, item_id) {
    $('#myModalLoading').modal('show');
    $.post("/shopping_carts/"+id+"/remove_item/"+item_id, { product_id: id, quantity: item_id },function(data){
      console.log('fallo: '+data)
      reloadCart();
    });
    sessionStorage["items_remove"]=true;
  }

  String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
  }

  var addItem = function(id, product_id, measure, amount, max_sale) {
    var replace = $('#'+measure+product_id).val();

    if (replace === "NaN" || replace === null || replace === "undefine" || replace === "" || replace === 0 || replace <= 0 || replace === "0,000" || replace === "0" || replace > max_sale || parseFloat( replace.replaceAll(',', '.') ) > max_sale) {
      $('#'+measure+product_id).focus();
      $('#'+measure+product_id).addClass("alert-input").delay(800).queue(function(){
        $(this).removeClass( "alert-input" ).dequeue();
      });
    } else {
      var quantity = parseFloat( replace.replaceAll(',', '.') );
      var price = parseFloat( amount );

      $('#myModalLoading').modal('show');

      $.post("/shopping_carts/"+id+"/add_item", { product_id: product_id, quantity: quantity, amount: price }, function( data, status ) {
        if (data.add == "true" ){
            reloadCart();
        } else {
            if (data.reason == "availability" ){
              $('#myModalLoading').modal('hide');
              $('#myModalNoProduct').modal('show');
              $('#myModalNoProduct').on('hidden.bs.modal', function(){
              reloadCart();
              });
            } else {
              $('#myModalLoading').modal('hide');
              $('#myModalValidateQuantify').modal('show');
            }
        }
        //console.log('fallo: '+status)
      });
      sessionStorage["items_add"]=true;
    }
  }

  $('#observation').keyup(function(){
    sessionStorage["observation"]=$(this).val();
  });

  var save_list = function(id){
    var obs = sessionStorage.getItem('observation');
    $.post("/shopping_carts/"+id+"/save_list", { obs: obs }, function( data, status ) {
      sessionStorage["guarded"]=true;
      sessionStorage["observation"]="";
      window.location.href = "/commanded_detail";

       console.log('fallo: '+status)
      });
  }