.container-fluid.padding-side-zero
  .row
    .col-xs-12.col-md-4
      h2.text-center Lista del mandado
      /table id="tabla" class="table table-striped"
        thead
          tr
            th Descripcion
            th Precio
        tfoot
          tr
            td Total
            td
              = number_to_currency(@shopping_cart.amount_total_cart, unit: 'BsF ', separator: ',', delimiter: '.')
        tbody
          - @shopping_cart.shopping_cart_items.each do |item|
            tr
              td
                = item.product.description
                br
                  = " #{number_with_precision(item.quantity, precision: 3)} x #{number_to_currency(item.amount, unit: 'BsF ', separator: ',', delimiter: '.')}"
              td
                = " #{ number_to_currency(item.quantity*item.amount, unit: '', separator: ',', delimiter: '.')} "
                a onclick="removeItem(#{@shopping_cart.id}, #{item.id})"
                  .remove

      button.btn-block.btn-sm.btn-m
        | Finalizar lista

    .col-xs-12.col-md-8
      h2.text-center Productos
      .row.box-productos
        - @products.each do |p|
          .col-xs-6.col-sm-4.col-lg-3
            .box-producto.center-block
              .col-xs-12.fondoimgarticulo.vertical-align
                span.helper
                = image_tag(p.first_image, {class: "img-responsive"})
              .col-xs-12.padding-side-zero name="box-precio"
                p.stock
                 | disponible: 
                 = p.stock
                h3.text-center
                  = p.description.capitalize
                p.precio-producto.text-center name="pmvp" value="#{p.price}" id="pmvp_#{p.id}"
                  = number_to_currency(p.price, unit: "", separator: ",", delimiter: ".")
                .container-fluid
                  .row.banda
                    - if p.measuring_type == MeasuringType::UNIDAD
                      span.cant 
                        | Cant
                      input.peso type="number" name="cant" id="cant_#{p.id}" min="0" max="#{p.stock}"
                    - else
                      span
                        | BsF
                      input.precio type="text" name="precio" id="precio_#{p.id}"
                      span
                        | Kg
                      input.peso type="text" name="peso" id="peso_#{p.id}"
                  .container-fluid
                    .row
                      .col-md-12
                        a class="add-product" method="POST" onclick="addItem(#{@shopping_cart.id}, #{p.id}, #{(p.measuring_type == MeasuringType::UNIDAD) ? '"cant_"' : '"peso_"' }, #{p.price})"
                          button.btn-xs.btn-m.center-block
                            | Agregar

= javascript_include_tag '/js/precio-peso', 'data-turbolinks-track' => true
= javascript_include_tag '/js/lista-mandado', 'data-turbolinks-track' => true

javascript:
  var removeItem = function(id, item_id) {
    $.post("/shopping_carts/"+id+"/remove_item/"+item_id, { product_id: id, quantity: item_id }, function( data ) {
    },function(data){
      console.log('fallo: '+data)
    });
    renderCart();
  }

  var renderCart = function() {
    window.location.href = "/";
  }

  String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
  }

  var addItem = function(id, product_id, measure, amount) {
    var replace = $('#'+measure+product_id).val();

    if (replace === null || replace === "undefine" || replace === "" || replace === 0 || replace === "0") {
      $('#'+measure+product_id).focus();
      $('#'+measure+product_id).addClass("alert-input").delay(800).queue(function(){
        $(this).removeClass( "alert-input" ).dequeue();
      });
    } else {
      var quantity = parseFloat( replace.replaceAll(',', '.') );
      var price = parseFloat( amount );

      $.post("/shopping_carts/"+id+"/add_item", { product_id: product_id, quantity: quantity, amount: price }, function( data ) {
      },function(data){
        console.log('fallo: '+data)
      });
      renderCart();
    }
  }